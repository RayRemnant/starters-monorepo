name: sync env vars with vercel

on:
  workflow_dispatch:

jobs:
  sync-env:
    runs-on: ubuntu-latest 
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 22
      - uses: pnpm/action-setup@v3
        with:
          version: 10
      - name: Install Vercel CLI
        run: pnpm add -g vercel@latest
      - name: sync firebase-vercel
        working-directory: ./firebase-vercel
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_ORG_ID: ${{ secrets.VERCEL_TEAM_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
        run: |
          vercel link --yes --project firebase-vercel --token $VERCEL_TOKEN
          vercel env rm FIREBASE_API_KEY development --yes --token $VERCEL_TOKEN || true
          echo "${{ secrets.FIREBASE_API_KEY }}" | vercel env add FIREBASE_API_KEY development --token $VERCEL_TOKEN
          vercel env rm FIREBASE_APP_ID development --yes --token $VERCEL_TOKEN || true
          echo "${{ secrets.FIREBASE_APP_ID }}" | vercel env add FIREBASE_APP_ID development --token $VERCEL_TOKEN
          vercel env rm FIREBASE_AUTH_DOMAIN development --yes --token $VERCEL_TOKEN || true
          echo "${{ secrets.FIREBASE_AUTH_DOMAIN }}" | vercel env add FIREBASE_AUTH_DOMAIN development --token $VERCEL_TOKEN
          vercel env rm FIREBASE_MESSAGING_SENDER_ID development --yes --token $VERCEL_TOKEN || true
          echo "${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}" | vercel env add FIREBASE_MESSAGING_SENDER_ID development --token $VERCEL_TOKEN
          vercel env rm FIREBASE_PROJECT_ID development --yes --token $VERCEL_TOKEN || true
          echo "${{ secrets.FIREBASE_PROJECT_ID }}" | vercel env add FIREBASE_PROJECT_ID development --token $VERCEL_TOKEN
          vercel env rm FIREBASE_STORAGE_BUCKET development --yes --token $VERCEL_TOKEN || true
          echo "${{ secrets.FIREBASE_STORAGE_BUCKET }}" | vercel env add FIREBASE_STORAGE_BUCKET development --token $VERCEL_TOKEN